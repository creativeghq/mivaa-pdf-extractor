name: Deploy FastAPI App

on:
  workflow_call:
    inputs:
      image_tag:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Image tag to deploy'
        required: false
        default: 'latest'
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      # 1. Setup SSH
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}

      # 2. Deploy to server
      - name: Deploy to server
        run: |
          IMAGE_TAG="${{ inputs.image_tag }}"
          
          ssh -o StrictHostKeyChecking=no root@104.248.68.3 << EOF
          set -e

          # Find the correct directory
          if [ -d "/opt/mivaa-pdf-extractor" ]; then
            APP_DIR="/opt/mivaa-pdf-extractor"
          elif [ -d "/var/www/mivaa-pdf-extractor" ]; then
            APP_DIR="/var/www/mivaa-pdf-extractor"
          else
            echo "::error::Application directory not found"
            echo "Available directories:"
            ls -la /opt/ /var/www/ || true
            exit 1
          fi

          echo "üìÅ Using directory: \$APP_DIR"
          cd "\$APP_DIR"

          # Check if docker-compose.yml exists
          if [ ! -f "docker-compose.yml" ]; then
            echo "::error::docker-compose.yml not found in \$APP_DIR"
            echo "Directory contents:"
            ls -la
            exit 1
          fi

          # Stop any legacy services
          if systemctl list-units --full -all | grep -Fq "mivaa-pdf-extractor.service"; then
            echo "üõë Stopping legacy service..."
            systemctl stop mivaa-pdf-extractor || true
            systemctl disable mivaa-pdf-extractor || true
          fi
          
          # Ensure Docker is running
          if ! systemctl is-active --quiet docker; then
            echo "üîÑ Starting Docker service..."
            systemctl start docker
          fi
          
          # Set environment variables
          export GITHUB_REPOSITORY="${{ github.repository }}"
          export IMAGE_TAG="$IMAGE_TAG"
          
          echo "üê≥ Pulling image: ghcr.io/\$GITHUB_REPOSITORY/mivaa-pdf-extractor:\$IMAGE_TAG"
          
          # Pull and start containers
          docker-compose pull
          docker-compose up -d
          
          # Wait and verify
          echo "‚è≥ Waiting for containers..."
          sleep 15
          
          if docker-compose ps | grep -q "Exit"; then
            echo "::error::Container failed to start"
            docker-compose ps
            docker-compose logs --tail=20
            exit 1
          fi
          
          echo "‚úÖ Deployment completed"
          EOF

      # 3. Verify deployment
      - name: Verify deployment
        run: |
          echo "üîç Verifying deployment..."
          
          # Test health endpoint
          for i in {1..6}; do
            if curl -f -s http://104.248.68.3:8000/health > /dev/null; then
              echo "‚úÖ Health check passed"
              break
            elif [ $i -eq 6 ]; then
              echo "::error::Health check failed after 6 attempts"
              exit 1
            else
              echo "‚è≥ Health check attempt $i failed, retrying..."
              sleep 10
            fi
          done
          
          echo "üéâ Deployment verified successfully"
