name: Deploy FastAPI App with uv

on:
  push:
    branches: [ "main", "production"]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
          FIRECRAWL_API_KEY: ${{ secrets.FIRECRAWL_API_KEY }}
          HUGGINGFACE_API_KEY: ${{ secrets.HUGGINGFACE_API_KEY }}
          HUGGING_FACE_ACCESS_TOKEN: ${{ secrets.HUGGING_FACE_ACCESS_TOKEN }}
          JINA_API_KEY: ${{ secrets.JINA_API_KEY }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          MATERIAL_KAI_API_KEY: ${{ secrets.MATERIAL_KAI_API_KEY }}
          MATERIAL_KAI_API_URL: ${{ secrets.MATERIAL_KAI_API_URL }}
          MATERIAL_KAI_CLIENT_ID: ${{ secrets.MATERIAL_KAI_CLIENT_ID }}
          MATERIAL_KAI_CLIENT_SECRET: ${{ secrets.MATERIAL_KAI_CLIENT_SECRET }}
          MATERIAL_KAI_WEBHOOK_SECRET: ${{ secrets.MATERIAL_KAI_WEBHOOK_SECRET }}
          MATERIAL_KAI_WORKSPACE_ID: ${{ secrets.MATERIAL_KAI_WORKSPACE_ID }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          REPLICATE_API_TOKEN: ${{ secrets.REPLICATE_API_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          TOGETHER_API_KEY: ${{ secrets.TOGETHER_API_KEY }}

      # 2. Setup SSH
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}

      # 3. Deploy to server
      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no root@104.248.68.3 << 'EOF'
          set -e

          APP_DIR=/var/www/mivaa-pdf-extractor
          DEPLOY_BRANCH="${{ github.ref_name }}"

          # Clone repo if it doesn't exist
          if [ ! -d "$APP_DIR/.git" ]; then
            rm -rf "$APP_DIR"
            git clone https://x-access-token:${{ secrets.GH_PAT }}@github.com/creativeghq/mivaa-pdf-extractor.git "$APP_DIR"
          fi

          cd "$APP_DIR"

          # Pull latest changes for the branch
          git fetch origin "$DEPLOY_BRANCH"
          git reset --hard origin/"$DEPLOY_BRANCH"

          # --- Initialize pyenv ---
          export PATH="$HOME/.pyenv/bin:$PATH"
          eval "$(pyenv init --path)"
          eval "$(pyenv init -)"
          eval "$(pyenv virtualenv-init -)"

          # Use pyenv Python
          PYTHON=python3.9

          # --- Create virtual environment ---
          if [ ! -d ".venv" ] || [ ! -f ".venv/pyvenv.cfg" ]; then
            rm -rf .venv
            $PYTHON -m venv .venv
          fi

          # Activate venv
          source .venv/bin/activate

          # --- Ensure pip and uv are installed ---
          python -m ensurepip --upgrade
          pip install --upgrade pip
          pip install uv

          # --- Generate uv.lock dynamically ---
          uv pip compile -o uv.lock requirements.txt requirements-torch.txt

          # --- Sync dependencies ---
          uv pip sync uv.lock

          # --- Verify installations ---
          python -c "import fastapi; print('FastAPI OK')"
          python -c "import pymupdf; print('PyMuPDF OK')"
          python -c "import pymupdf4llm; print('pymupdf4llm OK')"

          # Restart the FastAPI service
          sudo systemctl restart mivaa-pdf-extractor

          # Check service status
          sudo systemctl status mivaa-pdf-extractor --no-pager
          EOF
